stages:
  - gen
  - staging
  - production

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - 'which jq || ( apt-get update -y && apt-get install jq -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$GIT_SSH_PKEY")
  - git config --global url."ssh://git@g.ghn.vn".insteadOf "https://gido.vn"
  - git config --global user.email "gitbot@gido.vn"
  - git config --global user.name "Mr. Robot"
  - export CI_PUSH_REPO=git$(echo $CI_REPOSITORY_URL | grep -o "@.*" | sed "s/\//:/")
  - echo $CI_PUSH_REPO
  - git remote set-url --push origin ${CI_PUSH_REPO}
  - git status
  - go get -u gido.vn/gic/databases/sqitch.git
  - go get -u gido.vn/gic/databases/sqitch.git/scripts/deploy-sqitch
  
gen:
  stage: gen
  script:
    - sqitch.git -schema schema/schema.yml -name ${CI_COMMIT_SHA} -d ${CI_COMMIT_SHA}
    - 'git add sqitch.plan deploy/ && git commit -m "[ROBOT] Auto generate deploy" && git push origin ${CI_COMMIT_SHORT_SHA}:${CI_COMMIT_REF_NAME}'
  rules:
    - changes:
      - sqitch.plan
      - deploy/*
      when: never
    - when: always
    
staging:
  stage: staging
  script:
    - make deploy_stag
  rules:
    - when: manual

production:
  stage: production
  script:
    - make deploy_prod
  rules:
    - when: manual
